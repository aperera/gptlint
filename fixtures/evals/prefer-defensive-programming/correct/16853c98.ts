// Ensure exhaustiveness in switch statements
type Animal = 'dog' | 'cat' | 'bird'

function getSound(animal: Animal): string {
  switch (animal) {
    case 'dog':
      return 'bark'
    case 'cat':
      return 'meow'
    case 'bird':
      return 'tweet'
    default:
      const _exhaustiveCheck: never = animal
      return _exhaustiveCheck // This will cause a compile-time error if a new animal is not handled.
  }
}
// This adheres to defensive programming by ensuring all cases are handled.

// Generated by gpt-4-0125-preview
